{"version":3,"sources":["components/CurrentWeather.jsx","components/HourlyWeather.jsx","components/NextDays.jsx","App.js","index.js"],"names":["City","props","useState","weather","setWeather","weatherDecsription","setWeatherDecsription","temperature","setTemperature","cityName","city","useEffect","a","axios","lat","lon","res","Math","round","data","current","temp","icon","description","fetchWeather","Container","className","Col","src","alt","HourlyWeather","now","tillMidnight","weekDaysFull","hours","setHours","hourly","Row","Table","bordered","size","slice","map","hour","hourTime","Date","dt","getHours","style","backgroundColor","color","marginLeft","marginTop","fontWeight","width","random","id","weekDays","NextDays","days","setDays","today","setToday","useRouteMatch","url","path","indexDay","setIndexDay","nextMidnight","daily","resonsive","day","i","dayWeek","getDay","onClick","to","max","min","exact","cities","name","App","index","setIndex","fluid","town","textDecoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc1b14da.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Col } from \"react-bootstrap\";\r\nimport \"./css/CurrentWeather.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction City(props) {\r\n\tconst [weather, setWeather] = useState(\"\");\r\n\tconst [weatherDecsription, setWeatherDecsription] = useState(\"\");\r\n\tconst [temperature, setTemperature] = useState(0);\r\n\tconst cityName = props.city;\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchWeather = async () => {\r\n\t\t\tconst res = await axios(\r\n\t\t\t\t`https://api.openweathermap.org/data/2.5/onecall?lat=${props.lat}&lon=${props.lon}&exclude=minutely,hourly,daily,alerts&appid=66ee595de65ccc06d616d113abe9858e&units=metric\r\n`\r\n\t\t\t);\r\n\t\t\tsetTemperature(Math.round(res.data.current.temp));\r\n\t\t\tsetWeather(res.data.current.weather[0].icon);\r\n\t\t\tsetWeatherDecsription(res.data.current.weather[0].description);\r\n\t\t};\r\n\t\tfetchWeather();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Container className=\"card-container\">\r\n\t\t\t<Col>\r\n\t\t\t\t<h1 className=\"card-title\">{cityName}</h1>\r\n\t\t\t</Col>\r\n\t\t\t<Col>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={`https://openweathermap.org/img/wn/${weather}@2x.png`}\r\n\t\t\t\t\talt={weatherDecsription}\r\n\t\t\t\t/>\r\n\t\t\t</Col>\r\n\t\t\t<Col>\r\n\t\t\t\t<h2>{temperature}ÂºC</h2>\r\n\t\t\t</Col>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default City;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nconst HourlyWeather = ({ lat, lon, now, tillMidnight, weekDaysFull, city }) => {\r\n\tconst [hours, setHours] = useState([]);\r\n\tuseEffect(() => {\r\n\t\tconst fetchWeather = async () => {\r\n\t\t\tconst res = await axios(\r\n\t\t\t\t`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=current,minutely,daily,alerts&appid=66ee595de65ccc06d616d113abe9858e&units=metric&lang=hr`\r\n\t\t\t);\r\n\t\t\tsetHours(res.data.hourly);\r\n\t\t};\r\n\t\tfetchWeather();\r\n\t}, []);\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row className=\"d-flex justify-content-center mt-4 mb-4 font-weight-bold\">\r\n\t\t\t\t<h5>{`${city} - ${weekDaysFull}`}</h5>\r\n\t\t\t</Row>\r\n\t\t\t<Row className=\"d-flex justify-content-center\">\r\n\t\t\t\t<Table bordered size=\"sm\" className=\"table-sm w-50\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Sat</th>\r\n\t\t\t\t\t\t\t<th>Vrijeme</th>\r\n\t\t\t\t\t\t\t<th>Temperatura</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{hours.slice(now, tillMidnight).map((hour) => {\r\n\t\t\t\t\t\t\tconst date = new Date(hour.dt * 1000 - 3600 * 1000);\r\n\t\t\t\t\t\t\tconst hourTime = date.getHours();\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"rgb(112, 174, 224)\",\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tkey={Math.random(hour.weather[0].id)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: \"2rem\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: \"1rem\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{hourTime < 10 ? \"0\" + hourTime : hourTime}:00h\r\n\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: \"4rem\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: \"2rem\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={`https://openweathermap.org/img/wn/${hour.weather[0].icon}@2x.png`}\r\n\t\t\t\t\t\t\t\t\t\t\t\talt={hour.weather[0].description}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<h5\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: \"2rem\",\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: \"1rem\",\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{Math.round(hour.temp)}ÂºC\r\n\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</Table>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default HourlyWeather;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./css/NextDays.css\";\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute,\r\n\tLink,\r\n\tuseRouteMatch,\r\n} from \"react-router-dom\";\r\nimport HourlyWeather from \"./HourlyWeather\";\r\n\r\nconst weekDays = [\"ned\", \"pon\", \"uto\", \"sri\", \"Äet\", \"pet\", \"sub\"];\r\nconst weekDaysFull = [\r\n\t\"Nedjelja\",\r\n\t\"Ponedjeljak\",\r\n\t\"Utorak\",\r\n\t\"Srijeda\",\r\n\t\"Äetvrtak\",\r\n\t\"Petak\",\r\n\t\"Subota\",\r\n];\r\n\r\nfunction NextDays(props) {\r\n\tconst [days, setDays] = useState([]);\r\n\tconst [today, setToday] = useState();\r\n\tconst { url, path } = useRouteMatch();\r\n\tconst [indexDay, setIndexDay] = useState(0);\r\n\tlet now = new Date().getHours() - 1;\r\n\tlet tillMidnight = 24 - now;\r\n\tlet nextMidnight = tillMidnight + 24;\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchWeather = async () => {\r\n\t\t\tconst res = await axios(\r\n\t\t\t\t`https://api.openweathermap.org/data/2.5/onecall?lat=${props.lat}&lon=${props.lon}&exclude=current,minutely,alerts&appid=66ee595de65ccc06d616d113abe9858e&units=metric`\r\n\t\t\t);\r\n\t\t\tsetDays(res.data.daily);\r\n\t\t};\r\n\t\tfetchWeather();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<Container>\r\n\t\t\t\t<Row className=\"title\">\r\n\t\t\t\t\t<h2>{`Vremenska prognoza za ${props.city}`}</h2>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Col resonsive className=\"card-wrapper\">\r\n\t\t\t\t\t{days.slice(0, 1).map((day, i) => {\r\n\t\t\t\t\t\tconst date = new Date(day.dt * 1000 - 3600 * 1000);\r\n\t\t\t\t\t\tconst dayWeek = date.getDay();\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetToday(i);\r\n\t\t\t\t\t\t\t\t\tsetIndexDay(dayWeek);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"card-container\"\r\n\t\t\t\t\t\t\t\tto={`${url}/${weekDays[dayWeek]}`}\r\n\t\t\t\t\t\t\t\tkey={Math.random(day.weather[0].id)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className=\"cardTitle\">{weekDays[dayWeek]}</h3>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={`https://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\r\n\t\t\t\t\t\t\t\t\talt={day.weather[0].description}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"temperature\">{Math.round(day.temp.max)}ÂºC</h4>\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"temperature min-temp\">\r\n\t\t\t\t\t\t\t\t\t\t{Math.round(day.temp.min)}ÂºC\r\n\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t{days.slice(1, 2).map((day, i) => {\r\n\t\t\t\t\t\tconst date = new Date(day.dt * 1000 - 3600 * 1000);\r\n\t\t\t\t\t\tconst dayWeek = date.getDay();\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetIndexDay(dayWeek);\r\n\t\t\t\t\t\t\t\t\tsetToday(i + 1);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"card-container\"\r\n\t\t\t\t\t\t\t\tto={`${url}/${weekDays[dayWeek]}`}\r\n\t\t\t\t\t\t\t\tkey={Math.random(day.weather[0].id)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className=\"cardTitle\">{weekDays[dayWeek]}</h3>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={`https://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\r\n\t\t\t\t\t\t\t\t\talt={day.weather[0].description}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"temperature\">{Math.round(day.temp.max)}ÂºC</h4>\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"temperature min-temp\">\r\n\t\t\t\t\t\t\t\t\t\t{Math.round(day.temp.min)}ÂºC\r\n\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t{days.slice(2, 5).map((day) => {\r\n\t\t\t\t\t\tconst date = new Date(day.dt * 1000 - 3600 * 1000);\r\n\t\t\t\t\t\tconst dayWeek = date.getDay();\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName=\"card-container\"\r\n\t\t\t\t\t\t\t\tkey={Math.random(day.weather[0].id)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className=\"cardTitle\">{weekDays[dayWeek]}</h3>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={`https://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\r\n\t\t\t\t\t\t\t\t\talt={day.weather[0].description}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"temperature\">{Math.round(day.temp.max)}ÂºC</h4>\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"temperature min-temp\">\r\n\t\t\t\t\t\t\t\t\t\t{Math.round(day.temp.min)}ÂºC\r\n\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Col>\r\n\t\t\t</Container>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path={`${path}/${weekDays[indexDay]}`}>\r\n\t\t\t\t\t<HourlyWeather\r\n\t\t\t\t\t\tnow={today === 0 ? 1 : tillMidnight}\r\n\t\t\t\t\t\ttillMidnight={today === 0 ? tillMidnight : nextMidnight}\r\n\t\t\t\t\t\tlat={props.lat}\r\n\t\t\t\t\t\tlon={props.lon}\r\n\t\t\t\t\t\tweekDaysFull={weekDaysFull[indexDay]}\r\n\t\t\t\t\t\tcity={props.city}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default NextDays;\r\n","import { Container, Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport CurrentWeather from \"./components/CurrentWeather\";\nimport NextDays from \"./components/NextDays\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./app.css\";\nimport { useState } from \"react\";\n\nconst cities = [\n\t{\n\t\tname: \"Zagreb\",\n\t\tlat: 45.815,\n\t\tlon: 15.9819,\n\t},\n\t{\n\t\tname: \"Split\",\n\t\tlat: 43.5089,\n\t\tlon: 16.4392,\n\t},\n\t{\n\t\tname: \"Rijeka\",\n\t\tlat: 45.3431,\n\t\tlon: 14.4092,\n\t},\n\t{\n\t\tname: \"Osijek\",\n\t\tlat: 45.5511,\n\t\tlon: 18.6939,\n\t},\n];\n\nfunction App() {\n\tconst [index, setIndex] = useState(0);\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t<Container fluid=\"xl\">\n\t\t\t\t\t\t<Row className=\"title\">\n\t\t\t\t\t\t\t<h2>Vremenska prognoza</h2>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Col className=\"d-flex justify-content-between\">\n\t\t\t\t\t\t\t{cities.map((town, i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\ttextDecoration: \"none\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetIndex(i);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tto={`/${town.name}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<CurrentWeather\n\t\t\t\t\t\t\t\t\t\t\tkey={town.name}\n\t\t\t\t\t\t\t\t\t\t\tcity={town.name}\n\t\t\t\t\t\t\t\t\t\t\tlat={town.lat}\n\t\t\t\t\t\t\t\t\t\t\tlon={town.lon}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Container>\n\t\t\t\t</Route>\n\t\t\t\t{cities.map((town) => (\n\t\t\t\t\t<Route exact path={`/${cities[index].name}`}>\n\t\t\t\t\t\t<NextDays\n\t\t\t\t\t\t\tkey={cities[index].name}\n\t\t\t\t\t\t\tcity={cities[index].name}\n\t\t\t\t\t\t\tlat={cities[index].lat}\n\t\t\t\t\t\t\tlon={cities[index].lat}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route>\n\t\t\t\t))}\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}